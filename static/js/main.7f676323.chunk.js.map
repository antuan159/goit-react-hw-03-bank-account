{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/services/notyfy.js","components/services/storage.js","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.js","components/App/App.js","index.js","components/Controls/Controls.module.css","components/Balance/Balance.module.css"],"names":["module","exports","notSumm","toast","lackOfBalance","negativeBalance","key","value","localStorage","setItem","JSON","stringify","err","transactions","getItem","parse","Controls","state","amount","handleChangeInput","e","setState","currentTarget","hendleDeposit","props","onDeposit","hendleWithdraw","onWithdraw","this","className","style","controls","input","type","name","onChange","button","onClick","Component","Balance","expenses","income","balance","span","defaultProps","TransactionHistory","hystory","transaction","firstRow","columnTitle","map","item","id","row","column","date","Dashboard","createTransaction","shortid","generate","Number","Date","now","toLocaleString","handleDeposit","inputAmount","notyfy","prevState","handleWithdraw","onBalanceOrWithdraw","reduce","acc","curent","deposit","withdraw","savedTransactions","storage","length","App","ReactDOM","render","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,wCAAwC,SAAW,qCAAqC,YAAc,wCAAwC,IAAM,gCAAgC,OAAS,qC,2NCQ9M,G,MAAA,CAAEC,QAND,kBAAMC,YAAM,gNAMFC,cALJ,kBACpBD,YAAM,sSAIiCE,gBAHjB,kBACtBF,YAAM,2PCMO,EAbH,SAACG,EAAKC,GAChB,IACEC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,IACzC,MAAOK,MAUI,EAPH,SAAAN,GACV,IACE,IAAMO,EAAeL,aAAaM,QAAQR,GAC1C,OAAOO,EAAeH,KAAKK,MAAMF,GAAgB,KACjD,MAAOD,M,gBCLUI,E,2MAMnBC,MAAQ,CACNC,OAAQ,G,EAGVC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZH,OAAQE,EAAEE,cAAcf,S,EAI5BgB,cAAgB,WACd,EAAKC,MAAMC,UAAU,EAAKR,MAAMC,QAChC,EAAKG,SAAS,CAAEH,OAAQ,K,EAG1BQ,eAAiB,WACf,EAAKF,MAAMG,WAAW,EAAKV,MAAMC,QACjC,EAAKG,SAAS,CAAEH,OAAQ,K,wEAGhB,IACAA,EAAWU,KAAKX,MAAhBC,OACR,OACE,6BAASW,UAAWC,IAAMC,UACxB,2BACEF,UAAWC,IAAME,MACjBC,KAAK,SACLC,KAAK,SACL3B,MAAmB,IAAXW,EAAe,GAAKA,EAC5BiB,SAAUP,KAAKT,oBAEjB,4BACEU,UAAWC,IAAMM,OACjBH,KAAK,SACLI,QAAST,KAAKL,eAHhB,WAOA,4BACEM,UAAWC,IAAMM,OACjBH,KAAK,SACLI,QAAST,KAAKF,gBAHhB,iB,GA5C8BY,a,gBCDhCC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,QAArB,OACd,6BAASb,UAAWC,IAAMY,SACxB,0BAAMb,UAAWC,IAAMa,MAAvB,SAA+BF,EAA/B,KACA,0BAAMZ,UAAWC,IAAMa,MAAvB,SAA+BH,EAA/B,KACA,0BAAMX,UAAWC,IAAMa,MAAvB,YAAuCD,EAAvC,OAUJH,EAAQK,aAAe,CACrBJ,SAAU,EACVC,OAAQ,EACRC,QAAS,GAGIH,Q,gBCYAM,EAhCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,2BAAOjB,UAAWC,IAAMiB,aACtB,2BAAOlB,UAAWC,IAAMkB,UACtB,4BACE,wBAAInB,UAAWC,IAAMmB,aAArB,eACA,wBAAIpB,UAAWC,IAAMmB,aAArB,UACA,wBAAIpB,UAAWC,IAAMmB,aAArB,UAGJ,+BACGH,EAAQI,KAAI,SAAAC,GAAI,OACf,wBAAI7C,IAAK6C,EAAKC,GAAIvB,UAAWC,IAAMuB,KACjC,wBAAIxB,UAAWC,IAAMwB,QAASH,EAAKlB,MACnC,wBAAIJ,UAAWC,IAAMwB,QAASH,EAAKjC,OAAnC,KACA,wBAAIW,UAAWC,IAAMwB,QAASH,EAAKI,a,kOCTxBC,E,2MACnBvC,MAAQ,CACNJ,aAAc,GACd6B,QAAS,G,EAqBXe,kBAAoB,SAACvC,EAAQe,GAC3B,MAAO,CACLmB,GAAIM,IAAQC,WACZ1B,OACAf,OAAQ0C,OAAO1C,GACfqC,KAAM,IAAIM,KAAKA,KAAKC,OAAOC,mB,EAI/BC,cAAgB,SAAAC,GACd,IAAM/C,EAAS0C,OAAOK,GACtB,GAAI/C,EAAS,EACXgD,EAAO7D,uBAGT,GAAe,IAAXa,EAAJ,CAKA,IAAM6B,EAAc,EAAKU,kBAAkBvC,EAAQ,WACnD,EAAKG,UAAS,SAAA8C,GAAS,MAAK,CAC1BtD,aAAa,GAAD,mBAAMsD,EAAUtD,cAAhB,CAA8BkC,IAC1CL,QAASyB,EAAUzB,QAAUxB,WAP7BgD,EAAOhE,W,EAWXkE,eAAiB,SAAAH,GACf,IAAM/C,EAAS0C,OAAOK,GAEtB,GAAI/C,EAAS,EACXgD,EAAO7D,uBAGT,GAAe,IAAXa,EAAJ,CAP8B,IAYtBwB,EAAY,EAAKzB,MAAjByB,QACR,GAAIxB,EAASwB,EACXwB,EAAO9D,oBADT,CAKA,IAAM2C,EAAc,EAAKU,kBAAkBvC,EAAQ,YACnD,EAAKG,UAAS,SAAA8C,GAAS,MAAK,CAC1BtD,aAAa,GAAD,mBAAMsD,EAAUtD,cAAhB,CAA8BkC,IAC1CL,QAASyB,EAAUzB,QAAUxB,YAb7BgD,EAAOhE,W,EAiBXmE,oBAAsB,WAEpB,OADyB,EAAKpD,MAAtBJ,aACYyD,QAClB,SAACC,EAAKC,GACJ,O,yVAAO,CAAP,GACKD,EADL,eAEGC,EAAOvC,KAAOuC,EAAOtD,OAASqD,EAAIC,EAAOvC,UAG9C,CAAEwC,QAAS,EAAGC,SAAU,K,mFA9E1B,IAAMC,EAAoBC,EAAY,gBAClCD,GACF/C,KAAKP,UAAS,iBAAO,CACnBR,aAAc8D,EAAkB9D,aAChC6B,QAASiC,EAAkBjC,c,yCAKdyB,GAAY,IAAD,EACMvC,KAAKX,MAA/BJ,EADoB,EACpBA,aAAc6B,EADM,EACNA,QAElByB,EAAUtD,eAAiBA,GAC7B+D,EAAY,eAAgB,CAAE/D,eAAc6B,c,+BAqEtC,IAAD,EAC2Bd,KAAKX,MAA/BJ,EADD,EACCA,aAAc6B,EADf,EACeA,QADf,EAEuBd,KAAKyC,sBAA3BI,EAFD,EAECA,QAASC,EAFV,EAEUA,SACjB,OACE,yBAAK7C,UAAU,aACb,kBAAC,EAAD,CACEJ,UAAWG,KAAKoC,cAChBrC,WAAYC,KAAKwC,iBAEnB,kBAAC,EAAD,CAAS5B,SAAUkC,EAAUjC,OAAQgC,EAAS/B,QAASA,IACtD7B,EAAagE,OAAS,GACrB,kBAAC,EAAD,CAAoB/B,QAASjC,IAE/B,kBAAC,IAAD,W,GAtG+ByB,aCAxBwC,EANH,kBACV,yBAAKjD,UAAU,OACb,kBAAC,EAAD,QCAJkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDlF,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,OAAS,2B,kBCAjGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,yB","file":"static/js/main.7f676323.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__fKYqy\",\"firstRow\":\"TransactionHistory_firstRow__3i-UI\",\"columnTitle\":\"TransactionHistory_columnTitle__2hZ2T\",\"row\":\"TransactionHistory_row__2QbpB\",\"column\":\"TransactionHistory_column__3GP-b\"};","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notSumm = () => toast('Введите сумму для проведения операции!');\nconst lackOfBalance = () =>\n  toast('На счету недостаточно средств для проведения операции!');\nconst negativeBalance = () =>\n  toast('Введён отрицательный баланс попробуйте снова');\n\nexport default { notSumm, lackOfBalance, negativeBalance };\n","const set = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {}\n};\n\nconst get = key => {\n  try {\n    const transactions = localStorage.getItem(key);\n    return transactions ? JSON.parse(transactions) : null;\n  } catch (err) {}\n};\n\nexport default {\n  set,\n  get,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Controls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: 0,\n  };\n\n  handleChangeInput = e => {\n    this.setState({\n      amount: e.currentTarget.value,\n    });\n  };\n\n  hendleDeposit = () => {\n    this.props.onDeposit(this.state.amount);\n    this.setState({ amount: 0 });\n  };\n\n  hendleWithdraw = () => {\n    this.props.onWithdraw(this.state.amount);\n    this.setState({ amount: 0 });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={style.controls}>\n        <input\n          className={style.input}\n          type=\"number\"\n          name=\"amount\"\n          value={ amount === 0 ? '' : amount}\n          onChange={this.handleChangeInput}\n        />\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={this.hendleDeposit}\n        >\n          Deposit\n        </button>\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={this.hendleWithdraw}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ expenses, income, balance }) => (\n  <section className={style.balance}>\n    <span className={style.span}>️{income}$</span>\n    <span className={style.span}>️{expenses}$</span>\n    <span className={style.span}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  expenses: T.number,\n  income: T.number,\n  balance: T.number,\n};\n\nBalance.defaultProps = {\n  expenses: 0,\n  income: 0,\n  balance: 0,\n};\n\nexport default Balance;\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ hystory }) => (\n  <table className={style.transaction}>\n    <thead className={style.firstRow}>\n      <tr>\n        <th className={style.columnTitle}>Transaction</th>\n        <th className={style.columnTitle}>Amount</th>\n        <th className={style.columnTitle}>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {hystory.map(item => (\n        <tr key={item.id} className={style.row}>\n          <td className={style.column}>{item.type}</td>\n          <td className={style.column}>{item.amount}$</td>\n          <td className={style.column}>{item.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  hystory: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer } from 'react-toastify';\nimport notyfy from '../services/notyfy';\nimport storage from '../services/storage';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const savedTransactions = storage.get('transactions');\n    if (savedTransactions) {\n      this.setState(() => ({\n        transactions: savedTransactions.transactions,\n        balance: savedTransactions.balance,\n      }));\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions, balance } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      storage.set('transactions', { transactions, balance });\n    }\n  }\n\n  createTransaction = (amount, type) => {\n    return {\n      id: shortid.generate(),\n      type,\n      amount: Number(amount),\n      date: new Date(Date.now()).toLocaleString(),\n    };\n  };\n\n  handleDeposit = inputAmount => {\n    const amount = Number(inputAmount);\n    if (amount < 0) {\n      notyfy.negativeBalance();\n      return;\n    }\n    if (amount === 0) {\n      notyfy.notSumm();\n      return;\n    }\n\n    const transaction = this.createTransaction(amount, 'deposit');\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n      balance: prevState.balance + amount,\n    }));\n  };\n\n  handleWithdraw = inputAmount => {\n    const amount = Number(inputAmount);\n\n    if (amount < 0) {\n      notyfy.negativeBalance();\n      return;\n    }\n    if (amount === 0) {\n      notyfy.notSumm();\n      return;\n    }\n\n    const { balance } = this.state;\n    if (amount > balance) {\n      notyfy.lackOfBalance();\n      return;\n    }\n\n    const transaction = this.createTransaction(amount, 'withdraw');\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n      balance: prevState.balance - amount,\n    }));\n  };\n\n  onBalanceOrWithdraw = () => {\n    const { transactions } = this.state;\n    return transactions.reduce(\n      (acc, curent) => {\n        return {\n          ...acc,\n          [curent.type]: curent.amount + acc[curent.type],\n        };\n      },\n      { deposit: 0, withdraw: 0 },\n    );\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    const { deposit, withdraw } = this.onBalanceOrWithdraw();\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n        />\n        <Balance expenses={withdraw} income={deposit} balance={balance} />\n        {transactions.length > 0 && (\n          <TransactionHistory hystory={transactions} />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from '../Dashboard';\n\nconst App = () => (\n  <div className=\"App\">\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__13AIG\",\"input\":\"Controls_input__2Af2m\",\"button\":\"Controls_button__3AGX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1AdGp\",\"span\":\"Balance_span__3ih3l\"};"],"sourceRoot":""}